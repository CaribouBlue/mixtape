# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-app:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.2.0

    - name: Install node dependencies
      run: npm install

    - name: Generate css
      run: npx tailwindcss -i ./static/css/input.css -o ./static/css/output.css
      
    - name: Set up Docker
      uses: docker/setup-docker-action@v4.1.0

    - name: Docker Login
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5.6.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
    
    - name: Build and push Docker images
      uses: docker/build-push-action@v6.14.0
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
              
                  
    
        
