name: main

on:
  push:
    branches:
      - main

permissions:
  packages: write

env:
  CONTAINER_REGISTRY: ghcr.io
  APP_IMAGE_NAME: ${{ github.repository }}
  TOOLS_IMAGE_NAME: ${{ github.repository }}-tools
  COMMIT_URL: github.com/${{ github.repository }}/tree/${{ github.sha }}
  APP_DB_PATH: /var/lib/sqlite/db.sqlite
  STACK_NAME: mixtape
  DEPLOY_USER: deploy
  DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
  DEPLOY_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
  ACME_EMAIL: ${{ secrets.ACME_EMAIL }}
  TRAEFIK_AUTH_USERS: ${{ vars.TRAEFIK_AUTH_USERS }}

jobs:
  validate-env:
    runs-on: ubuntu-latest

    steps:
      - name: Validate environment variables
        run: |
          if [ -z "${{ env.DEPLOY_HOST }}" ] || [ -z "${{ env.DEPLOY_PRIVATE_KEY }}" ]; then
            echo "Failed environment variable validation"
            exit 1
          fi
          exit 0

  build-app:
    runs-on: ubuntu-latest

    needs:
      - validate-env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-docker-action@v4.1.0

      - name: Login to docker
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate app image metadata
        id: appMeta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/${{ env.APP_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.description=Mixtape application image built from ${{env.COMMIT_URL}}

      - name: Build and push app image
        uses: docker/build-push-action@v6.14.0
        with:
          context: .
          push: true
          tags: ${{ steps.appMeta.outputs.tags }}
          labels: ${{ steps.appMeta.outputs.labels }}

      - name: Generate tools image metadata
        id: toolsMeta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/${{ env.TOOLS_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.description=Mixtape application image built from ${{env.COMMIT_URL}}

      - name: Build and push tools image
        uses: docker/build-push-action@v6.14.0
        with:
          context: .
          file: dockerfile.tools
          build-args: |
            DB_PATH=${{env.APP_DB_PATH}}
          push: true
          tags: ${{ steps.toolsMeta.outputs.tags }}
          labels: ${{ steps.toolsMeta.outputs.labels }}

  deploy-app:
    runs-on: ubuntu-latest

    needs:
      - validate-env
      - build-app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create stack env file
        run: |
          echo 'APP_IMAGE_TAG=sha-${{ github.sha }}' >> ./envfile
          echo 'ACME_EMAIL=${{ env.ACME_EMAIL }}' >> ./envfile
          echo 'TRAEFIK_AUTH_USERS=${{ env.TRAEFIK_AUTH_USERS }}' >> ./envfile
          echo 'APP_DB_PATH=${{env.APP_DB_PATH}}'>> ./envfile

      - name: Deploy app stack
        uses: cssnr/stack-deploy-action@v1
        with:
          name: ${{ env.STACK_NAME }}
          file: ./compose.yaml
          env_file: ./envfile
          host: ${{ env.DEPLOY_HOST }}
          user: ${{ env.DEPLOY_USER }}
          ssh_key: ${{ env.DEPLOY_PRIVATE_KEY }}
          registry_auth: true
          registry_host: ${{ env.CONTAINER_REGISTRY }}
          registry_user: ${{ github.actor }}
          registry_pass: ${{ secrets.GITHUB_TOKEN }}
